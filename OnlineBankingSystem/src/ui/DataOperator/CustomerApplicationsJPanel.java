/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.DataOperator;

import Config.DatabaseConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static ui.DataOperator.ViewCustomersPanel.con;

/**
 *
 * @author anush
 */
public class CustomerApplicationsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerApplicationsJPanel
     */
    static Connection con;
    public CustomerApplicationsJPanel() {
        initComponents();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        customerApplications = new javax.swing.JTable();
        forwardApplication = new javax.swing.JToggleButton();
        rejectApplication = new javax.swing.JButton();
        customerId = new javax.swing.JTextField();

        customerApplications.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Customer Id", "Name", "Age", "Gender", "Date of Birth", "Address", "City", "State", "Pin", "Nationality", "Fathers Name", "Mothers Name", "Phone number", "Email", "Active state"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        customerApplications.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customerApplicationsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(customerApplications);

        forwardApplication.setText("Forward application");
        forwardApplication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forwardApplicationActionPerformed(evt);
            }
        });

        rejectApplication.setText("Reject Application");
        rejectApplication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectApplicationActionPerformed(evt);
            }
        });

        customerId.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1019, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(customerId, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(forwardApplication, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(115, 115, 115)
                .addComponent(rejectApplication, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(138, 138, 138))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(108, 108, 108)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(forwardApplication, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rejectApplication, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerId, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 98, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void forwardApplicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forwardApplicationActionPerformed
        // TODO add your handling code here:
        int num = 0;
        boolean b = false;
        if (customerId.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Empty textbox, first select a row!");
            return;
        }
        int i = Integer.parseInt(customerId.getText());
        try {
                con = DatabaseConnection.DatabaseCon();
                String query3 = "update accountApplication set processStatus=?,applicationStatus=? where custId=?";
                PreparedStatement stmt3 = con.prepareStatement(query3);
                stmt3.setString(1, "WIP");
                stmt3.setString(2, "PENDING");
                stmt3.setInt(3, i);
                stmt3.execute();
                JOptionPane.showMessageDialog(null, "Forwarded to security admin");
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_forwardApplicationActionPerformed

    private void rejectApplicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectApplicationActionPerformed
        // TODO add your handling code here:
        if (customerId.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Empty textbox, first select a row!");
            return;
        }
        int i = Integer.parseInt(customerId.getText());
        try {
             con = DatabaseConnection.DatabaseCon();

            String query1 = "update customer set activeState=? where customerId=?";
            PreparedStatement stmt1 = con.prepareStatement(query1);
            stmt1.setString(1, "N");
            stmt1.setInt(2, i);
            System.out.println(stmt1.execute());
            stmt1.execute();
            JOptionPane.showMessageDialog(null, "Rejected from data operator");
            String query2 = "DELETE FROM accountApplication WHERE custId =?";
            PreparedStatement stmt2 = con.prepareStatement(query2);
            stmt2.setInt(1, i);
            stmt2.execute();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_rejectApplicationActionPerformed

    private void customerApplicationsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerApplicationsMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) customerApplications.getModel();
        // get the selected row index
        int selectedRowIndex = customerApplications.getSelectedRow();
        // set the selected row data into jtextfields
        customerId.setText(model.getValueAt(selectedRowIndex, 0).toString());
    }//GEN-LAST:event_customerApplicationsMouseClicked

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) customerApplications.getModel();
        model.setRowCount(0);
        int num = 0;
        try {
            con = DatabaseConnection.DatabaseCon();
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("Select customer.* from customer, accountApplication a where ((customer.customerId=a.custId)"
                    + "AND (a.processStatus='PENDING' AND a.applicationStatus='PENDING' AND applicationType='REGISTER'))");

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getInt("customerId"),
                    rs.getString("customerName"),
                    rs.getInt("age"),
                    rs.getString("gender"),
                    rs.getString("date_of_birth"),
                    rs.getString("address"),
                    rs.getString("city"),
                    rs.getString("state"),
                    rs.getString("pin"),
                    rs.getString("nationality"),
                    rs.getString("fathers_name"),
                    rs.getString("mothers_name"),
                    rs.getString("phone_number"),
                    rs.getString("email"),
                    rs.getString("activeState")
                });
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable customerApplications;
    private javax.swing.JTextField customerId;
    private javax.swing.JToggleButton forwardApplication;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton rejectApplication;
    // End of variables declaration//GEN-END:variables
}

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Security;

import Config.DatabaseConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Properties;
import javax.swing.table.DefaultTableModel;
import javax.mail.*;
import javax.mail.internet.*;
import javax.mail.Session;
import javax.mail.Transport;
import javax.swing.JOptionPane;

/**
 *
 * @author anush
 */
public class AuthorizationFailApplicationsJPanel extends javax.swing.JPanel {

    int userid=0;
    static Connection con;
    /**
     * Creates new form AuthorizationFailApplicationsJPanel
     */
    public AuthorizationFailApplicationsJPanel() {
        initComponents();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        authorizationFailRecords = new javax.swing.JTable();
        unfreezeaccount = new javax.swing.JButton();
        freezeaccount = new javax.swing.JButton();

        setBackground(new java.awt.Color(165, 183, 195));

        authorizationFailRecords.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "loginId", "UserId", "User Role", "Password", "Login Fails"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        authorizationFailRecords.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                authorizationFailRecordsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(authorizationFailRecords);

        unfreezeaccount.setBackground(new java.awt.Color(225, 159, 112));
        unfreezeaccount.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        unfreezeaccount.setForeground(new java.awt.Color(255, 255, 255));
        unfreezeaccount.setText("UnFreeze Account");
        unfreezeaccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unfreezeaccountActionPerformed(evt);
            }
        });

        freezeaccount.setBackground(new java.awt.Color(225, 159, 112));
        freezeaccount.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        freezeaccount.setForeground(new java.awt.Color(255, 255, 255));
        freezeaccount.setText("Freeze Account");
        freezeaccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                freezeaccountActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1374, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(572, 572, 572)
                .addComponent(freezeaccount, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(unfreezeaccount, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(freezeaccount, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unfreezeaccount, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(436, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void freezeaccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_freezeaccountActionPerformed
        // TODO add your handling code here:
        unfreezeaccount.setEnabled(false);
        freezeaccount.setEnabled(true);
        if((authorizationFailRecords.getSelectionModel().isSelectionEmpty())){
           JOptionPane.showMessageDialog(this, "Please select a row");
           return;
        }
        else {
            try {
                 con = DatabaseConnection.DatabaseCon();

                String query1 = "update customer set activeState=? where customerId=?";
                PreparedStatement stmt1 = con.prepareStatement(query1);
                stmt1.setString(1, "N");
                stmt1.setInt(2, userid);
                System.out.println(stmt1.execute());
                stmt1.execute();
                JOptionPane.showMessageDialog(null, "Account freeze");
            } catch (Exception e) {
                System.out.println(e);
            }
        }
        
    }//GEN-LAST:event_freezeaccountActionPerformed

    private void authorizationFailRecordsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_authorizationFailRecordsMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) authorizationFailRecords.getModel();
        // get the selected row index
        int selectedRowIndex = authorizationFailRecords.getSelectedRow();
        // set the selected row data into jtextfields
        userid = Integer.parseInt(model.getValueAt(selectedRowIndex, 1).toString());
        System.out.println( "userid: " + userid);
        unfreezeaccount.setEnabled(true);
        freezeaccount.setEnabled(true);
    }//GEN-LAST:event_authorizationFailRecordsMouseClicked

    private void unfreezeaccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unfreezeaccountActionPerformed
        // TODO add your handling code here:
        unfreezeaccount.setEnabled(true);
        freezeaccount.setEnabled(false);
        if((authorizationFailRecords.getSelectionModel().isSelectionEmpty())){
           JOptionPane.showMessageDialog(this, "Please select a row");
           return;
        }
        else {
            try {
                 con = DatabaseConnection.DatabaseCon();

                String query1 = "update customer set activeState=? where customerId=?";
                PreparedStatement stmt1 = con.prepareStatement(query1);
                stmt1.setString(1, "Y");
                stmt1.setInt(2, userid);
                System.out.println(stmt1.execute());
                stmt1.execute();
                JOptionPane.showMessageDialog(null, "Account unfreeze");
            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_unfreezeaccountActionPerformed

private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) authorizationFailRecords.getModel();
        model.setRowCount(0);

        try {
             con = DatabaseConnection.DatabaseCon();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("Select * from logincredentials where loginFail=5");
            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getInt("loginId"),
                    rs.getInt("userId"),
                    rs.getString("userRole"),
                    rs.getString("Password"),
                    rs.getString("loginFail")
                });
//               rs.getString("activeState")
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable authorizationFailRecords;
    private javax.swing.JButton freezeaccount;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton unfreezeaccount;
    // End of variables declaration//GEN-END:variables
}

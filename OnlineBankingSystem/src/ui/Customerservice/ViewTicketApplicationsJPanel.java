/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Customerservice;

import Config.DatabaseConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author anush
 */
public class ViewTicketApplicationsJPanel extends javax.swing.JPanel {

    static Connection con;
    int TicketId=0;
    /**
     * Creates new form ViewTicketApplications
     */
    public ViewTicketApplicationsJPanel() {
        initComponents();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ticketRaiseData = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        issue = new javax.swing.JTextArea();
        ticketid = new javax.swing.JTextField();
        closeTicket = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(165, 183, 195));

        ticketRaiseData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Ticket ID", "Customer ID", "Customer Name", "Issue", "Ticket Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ticketRaiseData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ticketRaiseDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ticketRaiseData);

        issue.setColumns(20);
        issue.setRows(5);
        jScrollPane2.setViewportView(issue);

        closeTicket.setBackground(new java.awt.Color(225, 159, 112));
        closeTicket.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        closeTicket.setForeground(new java.awt.Color(255, 255, 255));
        closeTicket.setText("CloseTicket");
        closeTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeTicketActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Ticket Id");

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Issue");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(332, 332, 332)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(closeTicket, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(41, 41, 41)
                            .addComponent(ticketid, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(36, 604, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ticketid, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(closeTicket, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(377, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ticketRaiseDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ticketRaiseDataMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) ticketRaiseData.getModel();
        // get the selected row index
        int selectedRowIndex = ticketRaiseData.getSelectedRow();
        // set the selected row data into jtextfields
        //customerId.setText(model.getValueAt(selectedRowIndex, 1).toString());
        TicketId = Integer.parseInt((model.getValueAt(selectedRowIndex, 0).toString()));
        System.out.println(TicketId);
        ticketid.setText(String.valueOf(TicketId));
        issue.setText(model.getValueAt(selectedRowIndex, 3).toString());
    }//GEN-LAST:event_ticketRaiseDataMouseClicked

    private void closeTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeTicketActionPerformed
        // TODO add your handling code here:
        if(ticketid.getText().equals("") || issue.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Please enter the details");
            return;
        }
        try{
            con = DatabaseConnection.DatabaseCon();
                
                String query1 = "update ticketraise set status=? where ticketId=?";
                PreparedStatement stmt1 = con.prepareStatement(query1);
                stmt1.setString(1, "Closed");
                stmt1.setInt(2, TicketId);
                stmt1.execute();
                JOptionPane.showMessageDialog(null, "This ticket has been closed");
                populateTable();
        }
        catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_closeTicketActionPerformed

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) ticketRaiseData.getModel();
        model.setRowCount(0);

        try {
            con = DatabaseConnection.DatabaseCon();
            
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("Select * from ticketraise");
            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getInt("ticketId"),
                    rs.getInt("customerId"),
                    rs.getString("customerName"),
                    rs.getString("issue"),
                    rs.getString("status")
                });
//               rs.getString("activeState")
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeTicket;
    private javax.swing.JTextArea issue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable ticketRaiseData;
    private javax.swing.JTextField ticketid;
    // End of variables declaration//GEN-END:variables
}
